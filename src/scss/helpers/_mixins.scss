// =========================================================================
// Mixins
// =========================================================================

// =========================================================================
// Mobile First Media Queries - @include breakpoint(medium) {}
// =========================================================================

@mixin breakpoint($point) {

	@if $point == large {
        @media (min-width: 1270px) { @content; }
    }
    @if $point == big {
        @media (min-width: 1024px) { @content; }
    }
    @if $point == standard {
        @media (min-width: 960px) { @content; }
    }
    @else if $point == small {
        @media (min-width: 767px)  { @content; }
    }
    @else if $point == tiny {
        @media (min-width: 200px)  { @content; }
    }

	@else if $point == vertical-large {
		@media (max-height: 900px)  { @content; }
	}
	@else if $point == vertical-medium {
		@media (max-height: 820px)  { @content; }
	}

}

// =========================================================================
// States - @include state() { color: $white; }
// =========================================================================

@mixin state() {
	&:hover,
	&:active,
	&:focus {
		@content;
	}
}

// =========================================================================
// RGBA - @include rgba(background-color, $red, 0.8, $red);
// =========================================================================

@mixin rgba($property, $color: #000, $value: 0.5, $fallback: #000) {
	#{$property}: rgb(red($fallback), green($fallback), blue($fallback));
	#{$property}: rgba($color, $value);
}

// =========================================================================
// Transition - @include transition(all, 0.3s, linear);
// =========================================================================

@mixin transition($transition-property, $transition-time, $method) {
	transition: $transition-property $transition-time $method;
}

@mixin no-transition($transition-time) {
	transition: none;
}

// =========================================================================
// Border Radius - @include border-radius(5px); @include border-top-radius(10px);
// =========================================================================

@mixin border-radius($radius) {
	border-radius: $radius;
	background-clip: padding-box;
}

@mixin border-top-radius($radius) {
	border-top-right-radius: $radius;
	border-top-left-radius: $radius;
	background-clip: padding-box;
}
@mixin border-right-radius($radius) {
	border-bottom-right-radius: $radius;
	border-top-right-radius: $radius;
	background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
	border-bottom-right-radius: $radius;
	border-bottom-left-radius: $radius;
	background-clip: padding-box;
}
@mixin border-left-radius($radius) {
	border-bottom-left-radius: $radius;
	border-top-left-radius: $radius;
	background-clip: padding-box;
}

// =========================================================================
// Box Shadow - @include box-shadow(inset, 0, 1px, 1px, rgba(0, 0, 0, 0.5));
// =========================================================================

@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
	box-shadow:$top $left $blur $color #{$inset};
}

// =========================================================================
// Opacity - @include opacity(.8);
// =========================================================================

@mixin opacity($trans) {
	zoom: 1;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$trans * 100})";
	opacity: $trans;
}

// =========================================================================
// Box Sizing - @include box-sizing(border-box);
// =========================================================================

@mixin box-sizing($box-model) {
	box-sizing: $box-model;
}

// =========================================================================
// Clearfix - @include clearfix();
// =========================================================================

@mixin clearfix() {
    &:before,
    &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// =========================================================================
// Hide Text - @include hide-text();
// =========================================================================

@mixin hide-text {
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}
